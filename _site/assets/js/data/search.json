[
  
  {
    "title": "WebView",
    "url": "/posts/WebView/",
    "categories": "Api, Widgets",
    "tags": "view, web",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.WebView(url='https://www.google.com', k=None, orientation='horizontal', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Void",
    "url": "/posts/Void/",
    "categories": "Api, Widgets",
    "tags": "void",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Void(k=-67191210201, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "VideoPlayer",
    "url": "/posts/VideoPlayer/",
    "categories": "Api, Widgets",
    "tags": "player, video",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.VideoPlayer(source='', k=None, **kwargs)      Creates a VideoPlayer widget dynamically with added functionalities.  Parameters  k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      VideoPlayer(size = \"x120y35\") VideoPlayer(size = \"xchildreny40\") VideoPlayer(size = \"xchildrenychildren\") VideoPlayer(size = \"xchild_maxy40\") VideoPlayer(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      VideoPlayer(enable_events = True, on_event = 'width') VideoPlayer(enable_events = True, on_event = 'on_touch_down') VideoPlayer(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns VideoPlayer widget created dynamically.  Kivy Bases VideoPlayer "
  },
  
  {
    "title": "Video",
    "url": "/posts/Video/",
    "categories": "Api, Widgets",
    "tags": "video",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Video(source='', k=None, **kwargs)      Creates a Video widget dynamically with added functionalities.  Parameters  k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      Video(size = \"x120y35\") Video(size = \"xchildreny40\") Video(size = \"xchildrenychildren\") Video(size = \"xchild_maxy40\") Video(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      Video(enable_events = True, on_event = 'width') Video(enable_events = True, on_event = 'on_touch_down') Video(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns Video widget created dynamically.  Kivy Bases Video "
  },
  
  {
    "title": "TreeView",
    "url": "/posts/TreeView/",
    "categories": "Api, Widgets",
    "tags": "tree, view",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TreeView(tree={'node_id': '1', 'children': [{'node_id': '1.1', 'children': [{'node_id': '1.1.1', 'children': [{'node_id': '1.1.1.1', 'children': []}]}, {'node_id': '1.1.2'}, {'node_id': '1.1.3', 'children': []}]}, {'node_id': '1.2', 'children': []}]}, indent_level=16, k=None, enable_events=False, on_event='selected_node', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ToggleButtonBoxit",
    "url": "/posts/ToggleButtonBoxit/",
    "categories": "Api, Widgets",
    "tags": "box, button, layout, layout constructor, toggle",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ToggleButtonBoxit(*widgets, focus_behavior=False, hover_highlight=False, enable_events=True, k=None, on_event='on_release', base_cls=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ToggleButton",
    "url": "/posts/ToggleButton/",
    "categories": "Api, Widgets",
    "tags": "button, toggle",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ToggleButton(text='button', group=None, allow_no_selection=True, enable_events=True, k=None, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    TButton   ToggleButton  "
  },
  
  {
    "title": "ToActionItem",
    "url": "/posts/ToActionItem/",
    "categories": "Api, Widgets",
    "tags": "action, item, to",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ToActionItem(widget, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "TitlebarTitle",
    "url": "/posts/TitlebarTitle/",
    "categories": "Api, Widgets",
    "tags": "title, titlebar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TitlebarTitle(k=-67191210201, padding=[8, 0], halign='left', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "TitlebarRestoreButton",
    "url": "/posts/TitlebarRestoreButton/",
    "categories": "Api, Widgets",
    "tags": "button, restore, titlebar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TitlebarRestoreButton(text_states=(None, None), markup=True, k=-67191210201, size='x44', lcolor='', hover_highlight=True, bcolor_down='gray', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "TitlebarMinimizeButton",
    "url": "/posts/TitlebarMinimizeButton/",
    "categories": "Api, Widgets",
    "tags": "button, minimize, titlebar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TitlebarMinimizeButton(markup=True, k=-67191210201, size='x44', lcolor='', hover_highlight=True, bcolor_down='gray', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "TitlebarIcon",
    "url": "/posts/TitlebarIcon/",
    "categories": "Api, Widgets",
    "tags": "icon, titlebar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TitlebarIcon(**kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "TitlebarCloseButton",
    "url": "/posts/TitlebarCloseButton/",
    "categories": "Api, Widgets",
    "tags": "button, close, titlebar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TitlebarCloseButton(markup=True, k=-67191210201, size='x44', hover_highlight=True, lcolor='', bcolor_down='red', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Titlebar",
    "url": "/posts/Titlebar/",
    "categories": "Api, Widgets",
    "tags": "titlebar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Titlebar(k='titlebar', padding=[4, 4], orientation='horizontal', **kwargs)           The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "TextInputDark",
    "url": "/posts/TextInputDark/",
    "categories": "Api, Widgets",
    "tags": "dark, input, label, text",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TextInputDark(text='', enable_events=False, multiline=False, k=None, on_event='on_text_validate', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    InDark   InputDark   TextInputDark  "
  },
  
  {
    "title": "TextInput",
    "url": "/posts/TextInput/",
    "categories": "Api, Widgets",
    "tags": "input, label, text",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.TextInput(text='', enable_events=False, multiline=False, k=None, on_event='on_text_validate', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    In   Input   TextInput  "
  },
  
  {
    "title": "Tab2",
    "url": "/posts/Tab2/",
    "categories": "Api, Widgets",
    "tags": "tab",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Tab2(pannels={}, k=None, tab_pos='top_left', do_default_tab=False, head_label_args={'size_behavior': 'texth', 'padding': [16, 0, 16, 0], 'lcolor': 'gray'}, content_box_args={'lcolor': 'gray', 'padding': 4}, strip_args={'bcolor': [0.2, 0.64, 0.8, 1], 'pos_hint': {'bottom': 0}}, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Tab",
    "url": "/posts/Tab/",
    "categories": "Api, Widgets",
    "tags": "tab",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Tab(pannels={}, k=None, tab_pos='top_left', do_default_tab=False, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Switch",
    "url": "/posts/Switch/",
    "categories": "Api, Widgets",
    "tags": "switch",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Switch(active=False, k=None, enable_events=True, on_event='active', **kwargs)      Creates a Switch widget dynamically with added functionalities.  Parameters  k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      Switch(size = \"x120y35\") Switch(size = \"xchildreny40\") Switch(size = \"xchildrenychildren\") Switch(size = \"xchild_maxy40\") Switch(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      Switch(enable_events = True, on_event = 'width') Switch(enable_events = True, on_event = 'on_touch_down') Switch(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns Switch widget created dynamically.  Kivy Bases Switch "
  },
  
  {
    "title": "StripLayout",
    "url": "/posts/StripLayout/",
    "categories": "Api, Widgets",
    "tags": "layout, strip",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.StripLayout(*widgets, k=None, rows=1, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Stackit",
    "url": "/posts/Stackit/",
    "categories": "Api, Widgets",
    "tags": "layout, layout constructor, stack",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Stackit(*widgets, k=None, orientation='lr-tb', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Splitter",
    "url": "/posts/Splitter/",
    "categories": "Api, Widgets",
    "tags": "splitter",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Splitter(widget=None, k=None, sizable_from='right', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Spinner2",
    "url": "/posts/Spinner2/",
    "categories": "Api, Widgets",
    "tags": "spinner",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Spinner2(text='choice0', values=('choice0', 'choice1'), enable_events=False, k=None, on_event='text', background_normal='atlas://skdata/sktheme/spinner_full', option_cls=None, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Spinner",
    "url": "/posts/Spinner/",
    "categories": "Api, Widgets",
    "tags": "spinner",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Spinner(text='choice0', values=('choice0', 'choice1'), enable_events=False, k=None, on_event='text', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "SliderTouch",
    "url": "/posts/SliderTouch/",
    "categories": "Api, Widgets",
    "tags": "slider, touch",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.SliderTouch(value=0, min=0, max=1, k=None, enable_events=True, on_event='on_clickup', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Slider",
    "url": "/posts/Slider/",
    "categories": "Api, Widgets",
    "tags": "slider",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Slider(value=0, min=0, max=1, k=None, enable_events=False, on_event='value', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "SeparatorV",
    "url": "/posts/SeparatorV/",
    "categories": "Api, Widgets",
    "tags": "separator, v",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.SeparatorV(bcolor='gray', size=(2, 1), size_hint=(None, 1), k=-67191210201, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "SeparatorH",
    "url": "/posts/SeparatorH/",
    "categories": "Api, Widgets",
    "tags": "h, separator",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.SeparatorH(bcolor='gray', size=(1, 2), size_hint=(1, None), k=-67191210201, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ScrollbarMirror",
    "url": "/posts/ScrollbarMirror/",
    "categories": "Api, Widgets",
    "tags": "mirror, scrollbar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ScrollbarMirror(k=None, enable_events=False, on_event=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ScrollView",
    "url": "/posts/ScrollView/",
    "categories": "Api, Widgets",
    "tags": "scroll, view",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ScrollView(content, scroll_y=True, scroll_x=False, k=None, bar_color=[0.4, 0.4, 0.4, 0.9], bar_inactive_color=[0.4, 0.4, 0.4, 0.6], scroll_type=['bars', 'content'], effect_cls='scroll', bar_width=8, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ScreenManager",
    "url": "/posts/ScreenManager/",
    "categories": "Api, Widgets",
    "tags": "manager, screen",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ScreenManager(screens={}, transition='slide', k=None, **kwargs)  transition: no slide card swap fade wipe fallout risein,  Alias    ScreenManager   Screens  "
  },
  
  {
    "title": "Screen",
    "url": "/posts/Screen/",
    "categories": "Api, Widgets",
    "tags": "screen",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Screen(widgets=[], name='', k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Scatterit",
    "url": "/posts/Scatterit/",
    "categories": "Api, Widgets",
    "tags": "layout, layout constructor, scatter",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Scatterit(*widgets, k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Scatter",
    "url": "/posts/Scatter/",
    "categories": "Api, Widgets",
    "tags": "scatter",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Scatter(widget, k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "RstDocument",
    "url": "/posts/RstDocument/",
    "categories": "Api, Widgets",
    "tags": "document, rst",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.RstDocument(text='', k=None, enable_events=True, do_dot_subevent=True, on_event='on_ref_press', **kwargs)    Creates a RstDocument widget dynamically with added functionalities.  Parameters  k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      RstDocument(size = \"x120y35\") RstDocument(size = \"xchildreny40\") RstDocument(size = \"xchildrenychildren\") RstDocument(size = \"xchild_maxy40\") RstDocument(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      RstDocument(enable_events = True, on_event = 'width') RstDocument(enable_events = True, on_event = 'on_touch_down') RstDocument(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns RstDocument widget created dynamically.  Kivy Bases RstDocument "
  },
  
  {
    "title": "Rowlist",
    "url": "/posts/Rowlist/",
    "categories": "Api, Widgets",
    "tags": "list, rowlist",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Rowlist(data=[], enable_events=False, k=None, on_event='on_selection', keyboard_scroll=True, effect_cls='scroll', base_cls=None, cell_defaults={'text': '', 'halign': 'left', 'valign': 'middle', 'shorten': True, 'padding': 4, 'markup': True, 'font_name': 'segoeui.ttf'}, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "RoundRelativeit",
    "url": "/posts/RoundRelativeit/",
    "categories": "Api, Widgets",
    "tags": "layout, layout constructor, relative, round",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.RoundRelativeit(*widgets, k=None, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "RoundButtonRelativeit",
    "url": "/posts/RoundButtonRelativeit/",
    "categories": "Api, Widgets",
    "tags": "button, layout, layout constructor, relative, round",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.RoundButtonRelativeit(*widgets, k=None, enable_events=True, on_event='on_release', hover_highlight=False, focus_behavior=False, lcolor=[0.5, 0.5, 0.5, 1], bcolor_normal=[0.345, 0.345, 0.345, 0], bcolor_down=[0.2, 0.64, 0.8, 1], **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Relativeit",
    "url": "/posts/Relativeit/",
    "categories": "Api, Widgets",
    "tags": "layout, layout constructor, relative",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Relativeit(*widgets, k=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ProgressBarTouch",
    "url": "/posts/ProgressBarTouch/",
    "categories": "Api, Widgets",
    "tags": "bar, progress, touch",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ProgressBarTouch(value=0, max=1, k=None, enable_events=True, on_event='on_clickup', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ProgressBar2",
    "url": "/posts/ProgressBar2/",
    "categories": "Api, Widgets",
    "tags": "bar, progress",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ProgressBar2(value=0, max=1, k=None, fcolor=[1, 0, 0.2, 1], bcolor=[0.298, 0.298, 0.298, 1], **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ProgressBar",
    "url": "/posts/ProgressBar/",
    "categories": "Api, Widgets",
    "tags": "bar, progress",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ProgressBar(value=0, max=1, k=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Popup",
    "url": "/posts/Popup/",
    "categories": "Api, Widgets",
    "tags": "popup",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Popup(content, title='Popup window', enable_events=False, on_event='on_dismiss', do_dot_subevent=False, k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Playlist",
    "url": "/posts/Playlist/",
    "categories": "Api, Widgets",
    "tags": "list, playlist",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Playlist(data=[], k=None, enable_events=True, on_event='on_selection', keyboard_scroll=True, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Pageit",
    "url": "/posts/Pageit/",
    "categories": "Api, Widgets",
    "tags": "layout, layout constructor, page",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Pageit(*widgets, k=None, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "PagedText",
    "url": "/posts/PagedText/",
    "categories": "Api, Widgets",
    "tags": "label, paged, text",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.PagedText(pages=[], k=None, focus_behavior=False, halign='center', size_behavior='normal', valign='middle', **kwargs)      Creates a PagedText widget.  Dynamic Creation Parameters focus_behavior: bool     Whether the widget will have FocusBehavior:           False: No focus behavior              True: Widget class created with FocusBehavior         Default is False.   Parameters pages: list     A list where each element is a string representing each page              size_behavior: str     Defines special bindings for the behavior of text_size and size:           \"none\": No binding between text_size and widget size              \"normal\": Binds text_size to widget size              \"text\" or \"textv\": This widgets’s height will be set to the text content              \"texth\": This widgets’s width will be set to the text content         Default is “normal”   k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      PagedText(size = \"x120y35\") PagedText(size = \"xchildreny40\") PagedText(size = \"xchildrenychildren\") PagedText(size = \"xchild_maxy40\") PagedText(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      PagedText(enable_events = True, on_event = 'width') PagedText(enable_events = True, on_event = 'on_touch_down') PagedText(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns Label widget created dynamically with the following modifications:  Properties page (NumericProperty): Page index. Defaults to None.  pages (ListProperty): Initialized with the pages parameter. Defaults to [].  Events on_page(ins,val): Fired when the current page index is changed.  on_pages(ins,val): Fired when the value of pages is set.  Methods reload(): Sets page to 0 if pages is not empty.  empty(): Sets pages to [’’] and clears current text.  next_page(): Goes to the next page.  previous_page(): Goes to the previous page.  Kivy Bases Label "
  },
  
  {
    "title": "MultilineDark",
    "url": "/posts/MultilineDark/",
    "categories": "Api, Widgets",
    "tags": "dark, multiline",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.MultilineDark(text='', enable_events=False, multiline=True, k=None, on_event='on_text_validate', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Multiline",
    "url": "/posts/Multiline/",
    "categories": "Api, Widgets",
    "tags": "multiline",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Multiline(text='', enable_events=False, multiline=True, k=None, on_event='on_text_validate', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ModalView",
    "url": "/posts/ModalView/",
    "categories": "Api, Widgets",
    "tags": "modal, view",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ModalView(widgets=[], k=None, enable_events=False, on_event='on_pre_open', **kwargs)  Creates a ModalView widget dynamically with added functionalities.  Parameters widgets: list, Widget     Widget instance or list of widgets to be added dynamically.        Widget: Adds the widget as child.              [Widget, Widget, ...]: Adds each Widget in the list as child.      k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      ModalView(size = \"x120y35\") ModalView(size = \"xchildreny40\") ModalView(size = \"xchildrenychildren\") ModalView(size = \"xchild_maxy40\") ModalView(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      ModalView(enable_events = True, on_event = 'width') ModalView(enable_events = True, on_event = 'on_touch_down') ModalView(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns ModalView widget created dynamically.  Kivy Bases ModalView "
  },
  
  {
    "title": "Menu",
    "url": "/posts/Menu/",
    "categories": "Api, Widgets",
    "tags": "menu",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Menu(widgets=[], enforce_props={}, k=None, enable_events=True, on_event='on_select', bcolor='#181818', lcolor='gray', auto_width=False, separator_color='', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ListBox",
    "url": "/posts/ListBox/",
    "categories": "Api, Widgets",
    "tags": "box, list",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ListBox(data=[], enable_events=False, k=None, on_event='on_selection', keyboard_scroll=True, effect_cls='scroll', base_cls=None, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "LargeText",
    "url": "/posts/LargeText/",
    "categories": "Api, Widgets",
    "tags": "label, large, text",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.LargeText(text='', k=None, focus_behavior=False, shorten=True, halign='center', valign='middle', shorten_from='right', size_behavior='normal', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "LabelCheck",
    "url": "/posts/LabelCheck/",
    "categories": "Api, Widgets",
    "tags": "check, label",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.LabelCheck(text='checkbox', halign='left', valign='middle', enable_events=False, on_event='active', cwidth=40, active=False, k=None, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Label",
    "url": "/posts/Label/",
    "categories": "Api, Widgets",
    "tags": "label",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Label(text='', k=None, focus_behavior=False, halign='center', size_behavior='normal', valign='middle', hover_highlight=False, **kwargs)      Creates a Label widget dynamically with added functionalities.  Dynamic Creation Parameters focus_behavior: bool     Whether the widget will have FocusBehavior:           False: No focus behavior              True: Widget class created with FocusBehavior         Default is False.   hover_highlight: bool     Whether the widget will have HoverHighlightBehavior:           False: Nothing will happen on hover.              True: Widget will be highlighted on mouse hover.         Default is False.   Parameters size_behavior: str     Defines special bindings for the behavior of text_size and size:           \"none\": No binding between text_size and widget size              \"normal\": Binds text_size to widget size              \"text\" or \"textv\": This widgets’s height will be set to the text content              \"texth\": This widgets’s width will be set to the text content         Default is “normal”   k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      Label(size = \"x120y35\") Label(size = \"xchildreny40\") Label(size = \"xchildrenychildren\") Label(size = \"xchild_maxy40\") Label(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      Label(enable_events = True, on_event = 'width') Label(enable_events = True, on_event = 'on_touch_down') Label(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns Label widget created dynamically.  Kivy Bases Label  Alias    Label   T   Text  "
  },
  
  {
    "title": "JoinLabel",
    "url": "/posts/JoinLabel/",
    "categories": "Api, Widgets",
    "tags": "join, label",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.JoinLabel(texts=['text1', 'text2', 'text3'], k=None, focus_behavior=False, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Image",
    "url": "/posts/Image/",
    "categories": "Api, Widgets",
    "tags": "image",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Image(source='', k=None, async_load=True, anim_delay=0.25, fit_mode='contain', maximum_width=None, copypaste=False, is_svg=False, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "HoverBoxit",
    "url": "/posts/HoverBoxit/",
    "categories": "Api, Widgets",
    "tags": "box, hover, layout, layout constructor",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.HoverBoxit(*widgets, k=None, enable_events=True, hover_highlight=False, do_dot_subevent=True, on_event=('on_enter', 'on_leave'), **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Grid",
    "url": "/posts/Grid/",
    "categories": "Api, Widgets",
    "tags": "grid",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Grid(layout=[[]], k=None, navigation_behavior=False, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Floatit",
    "url": "/posts/Floatit/",
    "categories": "Api, Widgets",
    "tags": "floa, layout, layout constructor",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Floatit(*widgets, k=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "FlatToggleButtonAngle",
    "url": "/posts/FlatToggleButtonAngle/",
    "categories": "Api, Widgets",
    "tags": "angle, button, flat, toggle",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.FlatToggleButtonAngle(text='button', angle=90, enable_events=True, k=None, on_event='on_release', **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    FlatTButtonAngle   FlatToggleButtonAngle  "
  },
  
  {
    "title": "FlatToggleButton",
    "url": "/posts/FlatToggleButton/",
    "categories": "Api, Widgets",
    "tags": "button, flat, toggle",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.FlatToggleButton(text='button', enable_events=False, k=None, on_event='on_state_down', hover_highlight=False, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    FlatTB   FlatTButton   FlatToggleButton  "
  },
  
  {
    "title": "FlatRoundButton",
    "url": "/posts/FlatRoundButton/",
    "categories": "Api, Widgets",
    "tags": "button, flat, round",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.FlatRoundButton(text='button', lcolor=[0.5, 0.5, 0.5, 1], bcolor_normal=[0.345, 0.345, 0.345, 0], bcolor_down=[0.2, 0.64, 0.8, 1], markup=True, focus_behavior=False, hover_highlight=False, enable_events=True, on_event='on_release', k=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    FlatRoundB   FlatRoundButton  "
  },
  
  {
    "title": "FlatButtonAngle",
    "url": "/posts/FlatButtonAngle/",
    "categories": "Api, Widgets",
    "tags": "angle, button, flat",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.FlatButtonAngle(text='button', angle=90, enable_events=True, k=None, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "FlatButton",
    "url": "/posts/FlatButton/",
    "categories": "Api, Widgets",
    "tags": "button, flat",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.FlatButton(text='button', lcolor=[0.5, 0.5, 0.5, 1], bcolor_normal=[0.345, 0.345, 0.345, 0], bcolor_down=[0.2, 0.64, 0.8, 1], markup=True, focus_behavior=False, hover_highlight=False, enable_events=True, on_event='on_release', k=None, touchripple=False, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    FlatB   FlatButton  "
  },
  
  {
    "title": "Fill",
    "url": "/posts/Fill/",
    "categories": "Api, Widgets",
    "tags": "fill",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Fill(k=-67191210201, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Filelist",
    "url": "/posts/Filelist/",
    "categories": "Api, Widgets",
    "tags": "filelist, list",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Filelist(initialdir='./', k=None, folders_only=False, file_types_filter=(), **kw)  title - the title of the window initialdir - the directory that the dialog starts in initialfile - the file selected upon opening of the dialog filetypes - a sequence of (label, pattern) tuples, ‘*’ wildcard is allowed defaultextension - default extension to append to file (save dialogs) multiple - when true, selection of multiple items is allowed "
  },
  
  {
    "title": "External",
    "url": "/posts/External/",
    "categories": "Api, Widgets",
    "tags": "external",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.External(title='External window title', hwnd=None, k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "DropDown",
    "url": "/posts/DropDown/",
    "categories": "Api, Widgets",
    "tags": "down, drop",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.DropDown(widgets=[], k=None, enable_events=True, on_event='on_select', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "DatePicker",
    "url": "/posts/DatePicker/",
    "categories": "Api, Widgets",
    "tags": "date, picker",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.DatePicker(k=None, year=2020, month=1, enable_events=True, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    Calendar   DatePicker  "
  },
  
  {
    "title": "ComboBox",
    "url": "/posts/ComboBox/",
    "categories": "Api, Widgets",
    "tags": "box, combo",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ComboBox(text='choice0', values=('choice0', 'choice1'), enable_events=True, on_event='text', hint_text='', focus=False, button_width=32, k=None, dark=False, flat=False, **kwargs)         The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "CodeInput",
    "url": "/posts/CodeInput/",
    "categories": "Api, Widgets",
    "tags": "code, input",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.CodeInput(text='', lexer='CythonLexer', style_name='default', rehighlight=None, k=None, enable_events=False, on_event='on_text_validate', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ClearRoundButton",
    "url": "/posts/ClearRoundButton/",
    "categories": "Api, Widgets",
    "tags": "button, clear, round",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ClearRoundButton(*args, hover_highlight=True, lcolor='gray', markup=True, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    ClearRoundB   ClearRoundButton  "
  },
  
  {
    "title": "ClearButton",
    "url": "/posts/ClearButton/",
    "categories": "Api, Widgets",
    "tags": "button, clear",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ClearButton(*args, hover_highlight=True, lcolor='', markup=True, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    ClearB   ClearButton  "
  },
  
  {
    "title": "CheckBox",
    "url": "/posts/CheckBox/",
    "categories": "Api, Widgets",
    "tags": "box, check",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.CheckBox(active=False, k=None, **kwargs)      Creates a CheckBox widget dynamically with added functionalities.  Parameters  k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      CheckBox(size = \"x120y35\") CheckBox(size = \"xchildreny40\") CheckBox(size = \"xchildrenychildren\") CheckBox(size = \"xchild_maxy40\") CheckBox(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      CheckBox(enable_events = True, on_event = 'width') CheckBox(enable_events = True, on_event = 'on_touch_down') CheckBox(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns CheckBox widget created dynamically.  Kivy Bases CheckBox "
  },
  
  {
    "title": "Camera",
    "url": "/posts/Camera/",
    "categories": "Api, Widgets",
    "tags": "camera",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Camera(k=None, **kwargs)    Creates a custom Camera widget dynamically with added functionalities.     Requires the cv2 module. install it with pip install opencv-python.   Parameters  k: None, str, or NOTKEY     Key specification for quick acess:           None: Automatically sets an int value              str: Use specific string key              NOTKEY: Special flag indicating no key should be used,         Default is None.   size: sequence of 2 ints or str     Size specification of the widget:      String formats:           \"x{str: width}\": Sets widget width and size_hint_x = None              \"y{str: height}\": Sets widget height and size_hint_y = None              \"xchildren\": Sets size_hint_x = None and binds this widget’s width to the sum of the widths of its children.              \"ychildren\": Sets size_hint_y = None and binds this widget’s height to the sum of the heights of its children              \"xchild_max\": Sets size_hint_x = None and binds this widget’s width to the child with the maximum width.              \"ychild_max\": Sets size_hint_y = None and binds this widget’s height to the child with the maximum height.         You can combine up to two of the above size string specifications:           \"{str: number}\": Processed as size = (number, number) and size_hint = (None,None). Cannot be combined with other string specifications.         Sequence format:           (width, height): Size of the widget. Same as kivy.              Example:      Camera(size = \"x120y35\") Camera(size = \"xchildreny40\") Camera(size = \"xchildrenychildren\") Camera(size = \"xchild_maxy40\") Camera(size = \"60\")   enable_events: bool     Whether the widget will send events to the event_manager set in MyApp using the widgets k/id property as event identifier.        True: Triggers events.              False: Doesn’t trigger events.      on_event: str, iterable (tuple or list), dict     Defines which events/property changes will trigger the event_manager. Only has effect if enable_events = True        str: Name of the event or property that will trigger the event_manager.              tuple or list (str, str, …): Will trigger events for each name in the iterable              dict: calls widget.bind(**{on_event}) during widget creation              Example:      Camera(enable_events = True, on_event = 'width') Camera(enable_events = True, on_event = 'on_touch_down') Camera(enable_events = True, on_event = ['width','height','pos'])   do_dot_subevent: bool     Adds a “.” to describe the event when triggering the event_manager        True: The event identifier is str(widget.id)+\".{event_name}\"              False: The event identifier is the same as the widget’s k/id         Default is False   Returns Camera widget created dynamically.  Kivy Bases Image "
  },
  
  {
    "title": "CalcSheet",
    "url": "/posts/CalcSheet/",
    "categories": "Api, Widgets",
    "tags": "calc, sheet",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.CalcSheet(rows=5, cols=5, data=None, k=None, connect_input_to=None, connect_dpos_to=None, connect_cell_value_to=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ButtonBoxitAngle",
    "url": "/posts/ButtonBoxitAngle/",
    "categories": "Api, Widgets",
    "tags": "angle, boxit, button",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ButtonBoxitAngle(*widgets, k=None, angle=0, enable_events=True, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ButtonBoxit",
    "url": "/posts/ButtonBoxit/",
    "categories": "Api, Widgets",
    "tags": "box, button, layout, layout constructor",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ButtonBoxit(*widgets, focus_behavior=False, lwidth=1, hover_highlight=False, enable_events=True, k=None, on_event='on_release', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Button",
    "url": "/posts/Button/",
    "categories": "Api, Widgets",
    "tags": "button",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Button(text='button', enable_events=True, hover_highlight=False, k=None, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    B   Button  "
  },
  
  {
    "title": "Boxit_scatter",
    "url": "/posts/Boxit_scatter/",
    "categories": "Api, Widgets",
    "tags": "boxit, scatter",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Boxit_scatter(*widgets, k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    Boxit_scatter   Scatterit  "
  },
  
  {
    "title": "BoxitV",
    "url": "/posts/BoxitV/",
    "categories": "Api, Widgets",
    "tags": "boxit, v",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.BoxitV(*widgets, k=None, orientation='vertical', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "BoxitH",
    "url": "/posts/BoxitH/",
    "categories": "Api, Widgets",
    "tags": "boxit, h",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.BoxitH(*widgets, k=None, orientation='horizontal', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "BoxitAngle",
    "url": "/posts/BoxitAngle/",
    "categories": "Api, Widgets",
    "tags": "angle, boxit",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.BoxitAngle(*widgets, k=None, angle=0, enable_events=True, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Boxit",
    "url": "/posts/Boxit/",
    "categories": "Api, Widgets",
    "tags": "box, layout, layout constructor",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Boxit(*widgets, k=None, base_cls=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "BarTouchV",
    "url": "/posts/BarTouchV/",
    "categories": "Api, Widgets",
    "tags": "bar, touch, v",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.BarTouchV(value=0, max=1, scroll_delta=0, k=None, enable_events=False, on_event='value', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "BarTouchH",
    "url": "/posts/BarTouchH/",
    "categories": "Api, Widgets",
    "tags": "bar, h, touch",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.BarTouchH(value=0, max=1, scroll_delta=0, k=None, enable_events=False, on_event='value', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    BarTouch   BarTouchH  "
  },
  
  {
    "title": "BarTouch",
    "url": "/posts/BarTouch/",
    "categories": "Api, Widgets",
    "tags": "bar, touch",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.BarTouch(value=0, max=1, scroll_delta=0, k=None, enable_events=False, on_event='value', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    BarTouch   BarTouchH  "
  },
  
  {
    "title": "Artistlist",
    "url": "/posts/Artistlist/",
    "categories": "Api, Widgets",
    "tags": "artistlist, list",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Artistlist(data=[], k=None, enable_events=True, on_event='on_selection', keyboard_scroll=True, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.   Alias    Artistlist   RStack   RStackit   RecycleStackList  "
  },
  
  {
    "title": "Albumlist",
    "url": "/posts/Albumlist/",
    "categories": "Api, Widgets",
    "tags": "albumlist, list",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.Albumlist(data=[], k=None, enable_events=True, on_event='on_selection', keyboard_scroll=True, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionToggleButton",
    "url": "/posts/ActionToggleButton/",
    "categories": "Api, Widgets",
    "tags": "action, button, toggle",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionToggleButton(text='actionbutton', enable_events=True, on_event='on_release', k=None, **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionSeparator",
    "url": "/posts/ActionSeparator/",
    "categories": "Api, Widgets",
    "tags": "action, separator",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionSeparator(**kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionPrevious",
    "url": "/posts/ActionPrevious/",
    "categories": "Api, Widgets",
    "tags": "action, previous",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionPrevious(title='title', k=None, app_icon='skdata/logo/simplekivy-icon-32.png', with_previous=True, enable_events=True, bind_title=False, on_event='on_release', **kwargs)     The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionLabelCheck",
    "url": "/posts/ActionLabelCheck/",
    "categories": "Api, Widgets",
    "tags": "action, check, label",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionLabelCheck(text='checkbox', halign='left', valign='middle', bcolor=[0.133, 0.133, 0.133, 1], enable_events=False, on_event='active', size_hint_y=0.8, pos_hint={'center_y': 0.5}, cwidth=40, active=False, k=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionInput",
    "url": "/posts/ActionInput/",
    "categories": "Api, Widgets",
    "tags": "action, input",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionInput(text='', multiline=False, enable_events=False, k=None, on_event='on_text_validate', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionCheck",
    "url": "/posts/ActionCheck/",
    "categories": "Api, Widgets",
    "tags": "action, check",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionCheck(**kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionButton",
    "url": "/posts/ActionButton/",
    "categories": "Api, Widgets",
    "tags": "action, button",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionButton(text='actionbutton', k=None, enable_events=True, on_event='on_release', **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "ActionBar",
    "url": "/posts/ActionBar/",
    "categories": "Api, Widgets",
    "tags": "action, bar",
    "date": "2025-09-03 00:00:00 -0600",
    "content": "SimpleKivy.SimpleKivy.ActionBar(widgets=[], use_separator=False, k=None, **kwargs)       The documentation of this widget creator function is under construction. Please come back at a latter date.  "
  },
  
  {
    "title": "Getting started",
    "url": "/posts/getting-started/",
    "categories": "Tutorials",
    "tags": "",
    "date": "2025-08-28 00:00:00 -0600",
    "content": "Installation     SimpleKivy has only been tested on Windows and on Python &gt;= 3.10. Support this project if you are interested on Linux and MacOS implementations.   Kivy You need to install the 2.3 version of Kivy. Installation instructions can be found here.  SimpleKivy You can install the latest development version with: pip install git+https://github.com/ErgoCreate/SimpleKivy.git      This project is in the early stages of development and is expected to change in the future. Use it at your own risk.   Optional modules New features support - Image    New copy/paste/save functionalities introduced in SimpleKivy that require the following modules to work:     pip install pyperclipimg, requests, pillow           New svg source support introduced in SimpleKivy that requires the following modules to work:     pip install CairoSVG          "
  },
  
  {
    "title": "Welcome to Jekyll!",
    "url": "/posts/first-post/",
    "categories": "",
    "tags": "",
    "date": "2025-08-28 00:00:00 -0600",
    "content": "Welcome Hello world, this is my first Jekyll blog post. I hope you like it! "
  }
  
]

